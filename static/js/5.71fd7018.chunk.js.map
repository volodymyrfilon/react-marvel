{"version":3,"sources":["components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SingleComicsPage.js"],"names":["ErrorMessage","_jsx","src","gif","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComics","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","View","Link","to","SingleComicsPage","comicsId","useParams","setComics","_useMarvelService","useEffect","updateComics","then","onComicsLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/5.71fd7018.chunk.js","sourcesContent":["import gif from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // src={process.env.PUBLIC_URL + '/error.gif'} - IF IMPORT FROM PUBLIC!!!!!\r\n        <img \r\n            src={gif} \r\n            alt='ERROR'\r\n            style={{ display: \"block\", width: 250, height: 250, objectFit: \"contain\", margin: \"0 auto\" }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\tconst _apiBase = 'https://gateway.marvel.com/v1/public/'\r\n\tconst _apiKey = 'apikey=3155e7e4773051f4be08caea81d21383'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComics = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = 'GET',\r\n\t\t\tbody = null,\r\n\t\t\theaders = {\r\n\t\t\t\t'Content-Type': 'aplication/json',\r\n\t\t\t}\r\n\t\t) => {\r\n\t\t\tsetLoading(true)\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\treturn data\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetError(err.message)\r\n\t\t\t\tthrow err\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\r\n\treturn { loading, request, error, clearError }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport AppBanner from '../appBanner/AppBanner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport Spinner from '../spinner/Spinner'\r\nimport './singleComics.scss'\r\n\r\nconst SingleComicsPage = () => {\r\n\tconst { comicsId } = useParams()\r\n\tconst [comics, setComics] = useState(null)\r\n\tconst { loading, error, getComics, clearError } = useMarvelService()\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateComics()\r\n\t}, [comicsId])\r\n\r\n\tconst updateComics = () => {\r\n\t\tclearError()\r\n\t\tgetComics(comicsId).then(onComicsLoaded)\r\n\t}\r\n\r\n\tconst onComicsLoaded = comics => {\r\n\t\tsetComics(comics)\r\n\t}\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null\r\n\tconst spinner = loading ? <Spinner /> : null\r\n\tconst content = !(loading || error || !comics) ? (\r\n\t\t<View comics={comics} />\r\n\t) : null\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst View = ({ comics }) => {\r\n\tconst { title, description, pageCount, thumbnail, language, price } = comics\r\n\r\n\treturn (\r\n\t\t<div className='single-comic'>\r\n\t\t\t<img src={thumbnail} alt={title} className='single-comic__img' />\r\n\t\t\t<div className='single-comic__info'>\r\n\t\t\t\t<h2 className='single-comic__name'>{title}</h2>\r\n\t\t\t\t<p className='single-comic__descr'>{description}</p>\r\n\t\t\t\t<p className='single-comic__descr'>{pageCount}</p>\r\n\t\t\t\t<p className='single-comic__descr'>Language: {language}</p>\r\n\t\t\t\t<div className='single-comic__price'>{price}</div>\r\n\t\t\t</div>\r\n\t\t\t<Link to='/react-marvel/comics' className='single-comic__back'>\r\n\t\t\t\tBack to all\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SingleComicsPage\r\n"],"sourceRoot":""}