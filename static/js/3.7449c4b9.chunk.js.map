{"version":3,"sources":["components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/vision.png","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","gif","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComics","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","View","imgStyle","href","item","i","CharInfo","props","setChar","_useMarvelService","useEffect","updateChar","charId","then","onCharLoaded","skeleton","errorMessage","spinner","Spinner","content","CharList","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","arr","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","renderItems","disabled","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","RandomChar","timerId","setInterval","clearInterval","Math","floor","random","mjolnir","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.7449c4b9.chunk.js","sourcesContent":["import gif from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // src={process.env.PUBLIC_URL + '/error.gif'} - IF IMPORT FROM PUBLIC!!!!!\r\n        <img \r\n            src={gif} \r\n            alt='ERROR'\r\n            style={{ display: \"block\", width: 250, height: 250, objectFit: \"contain\", margin: \"0 auto\" }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\tconst _apiBase = 'https://gateway.marvel.com/v1/public/'\r\n\tconst _apiKey = 'apikey=3155e7e4773051f4be08caea81d21383'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComics = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t}\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = 'GET',\r\n\t\t\tbody = null,\r\n\t\t\theaders = {\r\n\t\t\t\t'Content-Type': 'aplication/json',\r\n\t\t\t}\r\n\t\t) => {\r\n\t\t\tsetLoading(true)\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t\t}\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\treturn data\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetError(err.message)\r\n\t\t\t\tthrow err\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\r\n\treturn { loading, request, error, clearError }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\nimport Spinner from '../spinner/Spinner'\n\nimport './charInfo.scss'\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null)\n\tconst { loading, error, getCharacter, clearError } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\t\tclearError()\n\t\tgetCharacter(charId).then(onCharLoaded)\n\t}\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading ? <Spinner /> : null\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char\n\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\n\t\tthumbnail ===\n\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo\n","import PropTypes from 'prop-types'\nimport { useEffect, useRef, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\nimport './charList.scss'\n\nconst CharList = props => {\n\tconst [charList, setCharList] = useState([])\n\tconst [newItemLoading, setNewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(210)\n\tconst [charEnded, setCharEnded] = useState(false)\n\tconst { loading, error, getAllCharacters } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllCharacters(offset).then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = newCharList => {\n\t\tlet ended = false\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList])\n\t\tsetNewItemLoading(newItemLoading => false)\n\t\tsetOffset(offset => offset + 9)\n\t\tsetCharEnded(charEnded => ended)\n\t}\n\n\tconst itemRefs = useRef([])\n\n\tconst focusOnItem = id => {\n\t\titemRefs.current.forEach(item =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t)\n\t\titemRefs.current[id].classList.add('char__item_selected')\n\t\titemRefs.current[id].focus()\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' }\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' }\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\treturn <ul className='char__grid'>{items}</ul>\n\t}\n\n\tconst items = renderItems(charList)\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return {ErrorMessage}\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react'\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\n\nimport mjolnir from '../../resources/img/mjolnir.png'\nimport './randomChar.scss'\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null)\n\tconst { loading, error, getCharacter, clearError } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t\tconst timerId = setInterval(updateChar, 60000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId)\n\t\t}\n\t}, [])\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError()\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000\n\t\tgetCharacter(id).then(onCharLoaded)\n\t}\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading ? <Spinner /> : null\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className='button button__main'>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt='mjolnir' className='randomchar__decoration' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{description}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar\n","import { useState } from 'react'\r\n\r\nimport decoration from '../../resources/img/vision.png'\r\nimport CharInfo from '../charInfo/CharInfo'\r\nimport CharList from '../charList/CharList'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\nimport RandomChar from '../randomChar/RandomChar'\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null)\r\n\r\n\tconst onCharSelected = id => {\r\n\t\tsetChar(id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage\r\n"],"sourceRoot":""}